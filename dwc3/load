#!/usr/bin/perl

use strict;

description("Load the dwc3 module");
run_as_root();
autodie();

sub set_properties {
    my $debugfs = shift;
    my $file = "$ENV{HOME}/dwc3_params.txt";
    my $param;
    my $val;

    open(my $fh, '<', $file) or return;

    while (my $row = <$fh>) {
        chomp $row;
        if ($row =~ m/^(.+)=(.+)/) {
            $param = $1;
            $val = $2;
        } else {
            die("Invalid config line\n$row\n\n");
        }

        print ("$param = $val\n");

        system("(echo $val > $debugfs/$param) 2> /dev/null");
        if ($? != 0) {
            print("Invalid param $param or value $val\n");
        }
    }
}

sub main {
    my $arg = shift @ARGV;

    unload();
    initram();

    if (plat_is_x86()) {
        if (system("modprobe -q dwc3_haps")) {
            cmd("modprobe dwc3_pci");
        } else {
            my $debugfs = dwc3_pci_debugfs();
            if (defined $debugfs) {
                set_properties($debugfs);
                cmd("echo > $debugfs/start");
            }
        }
    }

    system("modprobe -q phy-generic");
    cmd("modprobe dwc3");
    enable_trace();

    if (defined $arg) {
        if ($arg eq 'audio') {
            if (cmd("modinfo usb_f_uac2 > /dev/null")) {
                cmd("modprobe u_audio");
            }
            cmd("modprobe snd_usb_audio");
            if (cmd("modinfo usb_f_uac2 > /dev/null")) {
                cmd("modprobe g_audio c_srate=48000");
            } else {
                cmd("modprobe g_audio fn_play=/dev/snd/pcmC0D0p fn_cap=/dev/snd/pcmC0D0c fn_cntl=/dev/snd/controlC0");
            }
            return;
        } elsif ($arg eq 'ether') {
            cmd("modprobe g_ether");
            return;
        } elsif ($arg eq 'typec') {
            cmd("modprobe snps-phy-tc");
        }
    }

    cmd("modprobe g_mass_storage file=/dev/ram0 idVendor=1343 idProduct=35800 iSerialNumber=000020160529 removable=0");
}

main();
