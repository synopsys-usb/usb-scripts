#!/usr/bin/perl

use strict;

description("Load the dwc3 module");
run_as_root();
autodie();

my $SNPS_VID = 0x053F;
my $SNPS_PID_MSC = 0x8BD8;
my $SNPS_PID_UAC = 0x8BD9;

my $MSC_PARAMS = "modprobe g_mass_storage " .
                 "idVendor=$SNPS_VID idProduct=$SNPS_PID_MSC " .
                 "file=/dev/ram0 " .
                 "iSerialNumber=000020160529 removable=0";

my $UAC2_PARAMS = "modprobe g_audio " .
                  "idVendor=$SNPS_VID idProduct=$SNPS_PID_UAC " .
                  "c_srate=48000 c_ssize=2 c_chmask=3 " .
                  "p_srate=48000 p_ssize=2 p_chmask=3";

my $UAC1_LEGACY_PARAMS = "modprobe g_audio " .
                  "idVendor=$SNPS_VID idProduct=$SNPS_PID_UAC " .
                  "fn_play=/dev/snd/pcmC0D0p " .
                  "fn_cap=/dev/snd/pcmC0D0c " .
                  "fn_cntl=/dev/snd/controlC0";

sub do_completion {
    my $comp_line = <STDIN>;
    my @args = split /\s+/, $comp_line, -1;

    my $partial_cmd = $args[2];
    exit(0) if (!defined $partial_cmd);
    exit(0) if (@args > 3);

    my @cmds = grep { m/^$partial_cmd/ } ('audio', 'typec', 'ether');

    print join(' ', @cmds);
    exit 0;
}

sub set_properties {
    my $debugfs = shift;
    my $file = "$ENV{HOME}/dwc3_params.txt";
    my $param;
    my $val;

    open(my $fh, '<', $file) or return;

    while (my $row = <$fh>) {
        chomp $row;
        if ($row =~ m/^(.+)=(.+)/) {
            $param = $1;
            $val = $2;
        } else {
            die("Invalid config line\n$row\n\n");
        }

        print ("$param = $val\n");

        system("(echo $val > $debugfs/$param) 2> /dev/null");
        if ($? != 0) {
            print("Invalid param $param or value $val\n");
        }
    }
}

sub main {
    my $arg = $ARGV[0];

    if ($arg eq "completion") {
        do_completion();
    }

    unload();
    initram();

    if (plat_is_x86()) {
        if (system("modprobe -q dwc3_haps")) {
            cmd("modprobe dwc3_pci");
        } else {
            my $debugfs = dwc3_pci_debugfs();
            if (defined $debugfs) {
                set_properties($debugfs);
                for (@ARGV) {
                    my ($param, $value) = /^(.+)=(.+)/;

                    next if (!defined $param or !defined $value);

                    system("(echo $value > $debugfs/$param) 2> /dev/null");
                    if ($? != 0) {
                        print("Invalid param $param or value $value\n");
                    }
                }
                cmd("echo > $debugfs/start");
            }
        }
    }

    system("modprobe -q phy-generic");
    cmd("modprobe dwc3");
    enable_trace();

    if (defined $arg) {
        if ($arg eq 'audio') {
            cmd("modprobe snd_usb_audio");
            if (!system("modprobe -q usb_f_uac2")) {
                cmd($UAC2_PARAMS);
            } else {
                cmd($UAC1_LEGACY_PARAMS);
            }
            return;
        } elsif ($arg eq 'ether') {
            cmd("modprobe g_ether");
            return;
        } elsif ($arg eq 'typec') {
            cmd("modprobe snps-phy-tc");
        }
    }

    cmd($MSC_PARAMS);
}

main();
